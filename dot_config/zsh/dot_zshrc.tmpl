# Download zimfw plugin manager if missing.
if [[ ! -e ${ZIM_HOME}/zimfw.zsh ]]; then
  if (( ${+commands[curl]} )); then
    curl -fsSL --create-dirs -o ${ZIM_HOME}/zimfw.zsh \
        https://github.com/zimfw/zimfw/releases/latest/download/zimfw.zsh
  else
    mkdir -p ${ZIM_HOME} && wget -nv -O ${ZIM_HOME}/zimfw.zsh \
        https://github.com/zimfw/zimfw/releases/latest/download/zimfw.zsh
  fi
fi
# Install missing modules, and update ${ZIM_HOME}/init.zsh if missing or outdated.
if [[ ! ${ZIM_HOME}/init.zsh -nt ${ZDOTDIR:-${HOME}}/.zimrc ]]; then
  source ${ZIM_HOME}/zimfw.zsh init -q
fi
# Initialize modules.
source ${ZIM_HOME}/init.zsh

eval "$(zoxide init zsh --cmd cd)"
eval "$(fzf --zsh)"
eval "$(atuin init zsh)"

{{ if eq .chezmoi.os "darwin" }}
eval $(/opt/homebrew/bin/brew shellenv)
eval "$(fnm env --use-on-cd)"

path=(
	$path
	/usr/local/go/bin
	$GOPATH/bin
	$HOME/.local/bin
	$HOME/.cargo/bin
)
# export PATH=$GOPATH/bin:/usr/local/go/bin:$PATH
{{- end }}


# keybindings
bindkey '^ ' autosuggest-accept

# overwrite vi mode which is set when EDITOR contains the string vi
bindkey -e

source $ZDOTDIR/aliases

bindkey '^ ' autosuggest-accept

ssht() {
    if [ $# -eq 1 ]; then
        ssh -t "$1" 'tmux attach -t ssh || tmux new -s ssh'
    else
        echo "Usage: ssht user@host"
    fi
}
