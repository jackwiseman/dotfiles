#!/bin/bash

# Properly assign the output to hotkey_window_id. Use command substitution $() and quotes.
hotkey_window_id=$(yabai -m query --windows | jq -r 'map(select(.app == "Alacritty")) | .[0].id')


# check if hotkey_window_id is null or an empty string (app is closed)
if [ "$hotkey_window_id" == "null" ] || [ -z "$hotkey_window_id" ]; then
	open -na Alacritty
	sleep 0.08
	yabai -m window --toggle float --grid 1:1:0:0:0:0
else
	is_visible=$(yabai -m query --windows --window "$hotkey_window_id" | jq -r '."is-visible"')
	has_focus=$(yabai -m query --windows --window "$hotkey_window_id" | jq -r '."has-focus"')
	is_fullscreen=$(yabai -m query --windows --window "$hotkey_window_id" | jq -r '."has-fullscreen-zoom"')
	is_floating=$(yabai -m query --windows --window "$hotkey_window_id" | jq -r '."is-floating"')
    current_space_id=$(yabai -m query --spaces --space | jq -r '.index')

    # alacritty is maximized, so we should keep it visible but toggle fullscreen
    if "$is_visible" && "$is_fullscreen"; then
        yabai -m window "$hotkey_window_id" --toggle zoom-fullscreen
        exit 1
    fi

    # alacritty is visible but not maximized, so maximize it
    if "$is_visible" && ! "$is_floating"; then
        yabai -m window "$hotkey_window_id" --toggle zoom-fullscreen
        exit 1
    fi

	if "$is_visible" && "$has_focus"; then
		skhd -k "cmd -h"
	else
		current_space_id=$(yabai -m query --spaces --space | jq -r '.index')
		# Show and focus the window
		yabai -m window "$hotkey_window_id" --space "$current_space_id"
		yabai -m window "$hotkey_window_id" --focus
	fi
fi
