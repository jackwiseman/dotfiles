#!/bin/bash

# for a focus event
# if the window we focus to is not fullscreen (to catch focus on fullscreen events)
# if the space of the window we focus on has a fullscreened app, toggle that fullscreen

current_space_id=$(yabai -m query --spaces --space | jq -r '.index')
window_space_id=$(yabai -m query --windows --window "$YABAI_WINDOW_ID" | jq '.space')
window_is_fullscreen=$(yabai -m query --windows --window "$YABAI_WINDOW_ID" | jq '.["has-fullscreen-zoom"]')

fullscreen_window_id=$(yabai -m query --windows --space "$current_space_id" | jq -r 'map(select(.["has-fullscreen-zoom"] == true)) | .[].id')

if [ "$window_is_fullscreen" == "true" ]; then
    # osascript -e 'display notification "window is fullscreen, we would probably ignore this typically"'
    exit 1
fi

# osascript -e "display notification \"$fullscreen_window_id\""
if [ -z "$fullscreen_window_id" ]; then
    # osascript -e "display notification \"this space does NOT have a fullscren app\""
    exit 1
fi


if ! [ "$window_space_id" == "$current_space_id" ]; then
    # osascript -e "display notification \"window space is NOT equal to current space\""
    exit 1
fi

if [ "$window_space_id" == "$current_space_id" ] && [ -n "$fullscreen_window_id" ]; then
    # osascript -e "display notification \"toggling zoom for "$fullscreen_window_id"\""
    yabai -m window "$fullscreen_window_id" --toggle zoom-fullscreen
fi
