ZIM_HOME=~/.zim

# Download zimfw plugin manager if missing.
if [[ ! -e ${ZIM_HOME}/zimfw.zsh ]]; then
  if (( ${+commands[curl]} )); then
    curl -fsSL --create-dirs -o ${ZIM_HOME}/zimfw.zsh \
        https://github.com/zimfw/zimfw/releases/latest/download/zimfw.zsh
  else
    mkdir -p ${ZIM_HOME} && wget -nv -O ${ZIM_HOME}/zimfw.zsh \
        https://github.com/zimfw/zimfw/releases/latest/download/zimfw.zsh
  fi
fi
# Install missing modules, and update ${ZIM_HOME}/init.zsh if missing or outdated.
if [[ ! ${ZIM_HOME}/init.zsh -nt ${ZDOTDIR:-${HOME}}/.zimrc ]]; then
  source ${ZIM_HOME}/zimfw.zsh init -q
fi
# Initialize modules.
source ${ZIM_HOME}/init.zsh

{{ if eq .chezmoi.os "darwin" }}
eval $(/usr/local/bin/brew shellenv)
export GOPATH=~/go
export PATH=$GOPATH/bin:/usr/local/go/bin:$PATH
export DISABLE_AUTO_TITLE=true
export TLDR_AUTO_UPDATE_DISABLED=true
export EDITOR=$(brew --prefix)/bin/nvim

# use 1password for ssh
export SSH_AUTH_SOCK=~/Library/Group\ Containers/2BUA8C4S2C.com.1password/t/agent.sock

export CPPFLAGS="-I$(xcrun -show-sdk-path)/usr/include"
{{- end }}

{{ if eq .chezmoi.os "linux" }}
path=(
	$path
	/usr/local/go/bin
	/opt/nvim-linux64/bin
	~/bin/
)

export EDITOR=nvim
{{- end }}

alias ls="ls --color=auto"
alias l="ls -la -FG"
alias ga="git add"
alias gs="git status"
alias gd="git diff"
alias gc="git commit -m"
alias t="task"
alias v=$EDITOR
alias vi=$EDITOR
{{- if eq .context "work" }}
alias ssh_ezdock="~/ezoicgit/ez-dock-corp-sol/ssh_into_container.sh"
{{- end }}

# keybindings
bindkey '^ ' autosuggest-accept

# fnm completion
eval "$(fnm env --use-on-cd)"

# fzf completion
eval "$(fzf --zsh)"

timezsh() {
  shell=${1-$SHELL}
  /usr/bin/time $shell -i -c exit
}

export PYENV_ROOT=$HOME/.config/pyenv
export PATH=$PYENV_ROOT/bin:$PATH

# Lazy load pyenv
function pyenv() {
  unset -f pyenv
  eval "$(command pyenv init -)"
  pyenv $@
}
